/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package veterinaria;

import dao.DAOUsuario;
import dao.DaoPropietario;
import entidades.Propietario;
import entidades.RegistroUsuario;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class JFPropietario extends javax.swing.JFrame {
    
    private List<Propietario> propietarios;
    private Propietario actual;
    private DefaultTableModel modelo = new DefaultTableModel();
    private List<RegistroUsuario> usuarios;
    private RegistroUsuario usuarioLogeado;
    
    
    public void setUsuarioLogeado(RegistroUsuario usuario){
        this. usuarioLogeado = usuario;
    }
    
    public RegistroUsuario getUsuarioLogeado(){
        return this.usuarioLogeado;
    }
    
    public JFPropietario() {
        this.insertarColumnas();
        initComponents();
        this.activarControles(false);
        this.cboUsuario.setEnabled(false);
        this.setLocationRelativeTo(null);
        //this.lblUsuario.setText(getUsuarioLogeado().getNombres());
        //this.lblUsuario.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgGenero = new javax.swing.ButtonGroup();
        panPropietario = new javax.swing.JPanel();
        lblNombres = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblDNI = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rbMasculino = new javax.swing.JRadioButton();
        rbFemenino = new javax.swing.JRadioButton();
        btnRegistar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        chkVigencia = new javax.swing.JCheckBox();
        panListado = new javax.swing.JPanel();
        btnListar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListado = new javax.swing.JTable();
        lblPropietario = new javax.swing.JLabel();
        txtPropietario = new javax.swing.JTextField();
        btnCerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboUsuario = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuExportarPropietario = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panPropietario.setBackground(new java.awt.Color(0, 102, 102));
        panPropietario.setBorder(javax.swing.BorderFactory.createTitledBorder("Propietario"));

        lblNombres.setText("Nombres");

        lblApellidos.setText("Apellidos");

        lblDireccion.setText("Direccion");

        lblTelefono.setText("Telefono");

        lblDNI.setText("DNI");

        lblSexo.setText("Sexo");

        lblEmail.setText("E-mail");

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosKeyTyped(evt);
            }
        });

        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        txtDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDNIKeyTyped(evt);
            }
        });

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        bgGenero.add(rbMasculino);
        rbMasculino.setText("Masculino");

        bgGenero.add(rbFemenino);
        rbFemenino.setText("Femenino");

        btnRegistar.setText("Registrar");
        btnRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        chkVigencia.setText("Vigencia");

        javax.swing.GroupLayout panPropietarioLayout = new javax.swing.GroupLayout(panPropietario);
        panPropietario.setLayout(panPropietarioLayout);
        panPropietarioLayout.setHorizontalGroup(
            panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPropietarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panPropietarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegistar)
                        .addGap(66, 66, 66)
                        .addComponent(btnCancelar))
                    .addGroup(panPropietarioLayout.createSequentialGroup()
                        .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panPropietarioLayout.createSequentialGroup()
                                .addComponent(lblDireccion)
                                .addGap(18, 18, 18)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panPropietarioLayout.createSequentialGroup()
                                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefono)
                                    .addComponent(lblDNI)
                                    .addComponent(lblSexo)
                                    .addComponent(lblEmail))
                                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panPropietarioLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                            .addComponent(txtDNI, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(panPropietarioLayout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(rbMasculino)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbFemenino))
                                    .addGroup(panPropietarioLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panPropietarioLayout.createSequentialGroup()
                                    .addComponent(lblApellidos)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidos))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panPropietarioLayout.createSequentialGroup()
                                    .addComponent(lblNombres)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(chkVigencia))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panPropietarioLayout.setVerticalGroup(
            panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPropietarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombres)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidos)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDNI)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMasculino)
                    .addComponent(rbFemenino)
                    .addComponent(lblSexo))
                .addGap(25, 25, 25)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkVigencia)
                .addGap(37, 37, 37)
                .addGroup(panPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panPropietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 73, -1, -1));

        panListado.setBackground(new java.awt.Color(0, 153, 153));
        panListado.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado"));
        panListado.setForeground(new java.awt.Color(255, 255, 255));

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        tblListado.setModel(this.modelo);
        jScrollPane1.setViewportView(tblListado);

        lblPropietario.setForeground(new java.awt.Color(255, 255, 255));
        lblPropietario.setText("Propietario");

        javax.swing.GroupLayout panListadoLayout = new javax.swing.GroupLayout(panListado);
        panListado.setLayout(panListadoLayout);
        panListadoLayout.setHorizontalGroup(
            panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panListadoLayout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addGap(46, 46, 46)
                        .addComponent(btnModificar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panListadoLayout.createSequentialGroup()
                        .addComponent(lblPropietario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPropietario)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar)))
                .addContainerGap())
        );
        panListadoLayout.setVerticalGroup(
            panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(lblPropietario)
                    .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnNuevo))
                .addContainerGap())
        );

        getContentPane().add(panListado, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 540, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PROPIETARIO");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, 50));

        lblUsuario.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(736, 42, 171, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/img/FONDOTOTAL.png"))); // NOI18N
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 620));

        cboUsuario.setModel(cargarUsuarios());
        getContentPane().add(cboUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 12, 111, -1));

        jMenu1.setText("Archivo");

        mnuExportarPropietario.setText("Exportar reporte");
        mnuExportarPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportarPropietarioActionPerformed(evt);
            }
        });
        jMenu1.add(mnuExportarPropietario);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.actual = null;
        this.activarControles(true);
        this.limpiarControles();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.activarControles(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistarActionPerformed
        DaoPropietario dao;
        Propietario propietario;
        
        if (this.validarDatos() == true){
            propietario = new Propietario();
            propietario.setNombres(this.txtNombres.getText());
            propietario.setApellidos(this.txtApellidos.getText());
            propietario.setDireccion(this.txtDireccion.getText());
            propietario.setTelefono(this.txtTelefono.getText());
            propietario.setDNI(this.txtDNI.getText());
            
            if (this.rbMasculino.isSelected() == true) {
                propietario.setSexo('M');
            }else{
                propietario.setSexo('F');
            }
            propietario.setE_mail(this.txtEmail.getText());
            propietario.setUsuario(this.usuarios.get
                            (this.cboUsuario.getSelectedIndex()));
            propietario.setVigencia(this.chkVigencia.isSelected());
      
            dao = new DaoPropietario();
            try {
                if (this.actual == null) {
                    dao.registrar(propietario);
                }else{
                    propietario.setCodigo(this.actual.getCodigo());
                    dao.actualizar(propietario);
                }
                this.activarControles(false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "No se pudo registrar "+e.getMessage());
            }finally{   
                propietario = null;
                dao = null;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese datos en los campos faltantes\n"
                                            + "\n=====================================\n"
                    + "Los campos obligatorios son:\n"
                    + "Nombre\nApellido\nTelefono\nDNI");
        }

    }//GEN-LAST:event_btnRegistarActionPerformed

    private ComboBoxModel cargarUsuarios(){
        DAOUsuario dao = new DAOUsuario();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        
        try {
            this.usuarios = dao.listar();
            this.llenarCombo(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }finally{
            dao = null;
        }
        return modelo;
    }
    
    private void llenarCombo(DefaultComboBoxModel modelo){
        for (RegistroUsuario usuario : this.usuarios) {
            modelo.addElement(usuario.getUsuario());
        }
    }
    
    private boolean validarDatos(){
        boolean validar = true;
        if (this.txtNombres.getText().length() == 0) {

            validar = false;
        }
        if (this.txtApellidos.getText().length() == 0) {

            validar = false;
        }
        if (this.txtTelefono.getText().length() == 0) {

            validar = false;
        }
        if (this.txtDNI.getText().length() == 0) {

            validar = false;
        }
        return validar;
    }
    
    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        
        DaoPropietario dao = new DaoPropietario();
        
        try {
            this.propietarios = dao.listar(this.txtPropietario.getText());
            this.llenarTabla();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }finally{
            dao = null;
        }
        
    }//GEN-LAST:event_btnListarActionPerformed

    private void llenarTabla(){
        this.modelo.setRowCount(0);
        if (this.propietarios != null) {
            for (Propietario propietario : this.propietarios) {
                this.modelo.addRow(new Object[]{
                    propietario.getNombres(),
                    propietario.getDireccion(),
                    propietario.getTelefono(),
                    propietario.getDNI()
                });
            }
        }
    }
    
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
       int pos = this.tblListado.getSelectedRow();

        if (pos > -1) {
            this.actual = propietarios.get(pos);
            this.presentarDatos();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un trabajador");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        char car = evt.getKeyChar(); 
        if (this.txtNombres.getText().length() == 50) {
            evt.consume();
        }else{
            
        if( (car<'a' || car>'z') && (car<'A' || car>'Z')           
            && car !='á' //Minúsculas           
            && car !='é'          
            && car !='í'          
            && car !='ó'         
            && car !='ú' 
            && car !='Á' //Mayúsculas           
            && car !='É'          
            && car !='Í'          
            && car !='Ó'
            && car !='Ú'
            && car !='ñ'
            && car !='Ñ'   
            && (car!=(char)KeyEvent.VK_SPACE))
        {    
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese menos de 100 caracteres validos");
        }
        }
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyTyped
        char car = evt.getKeyChar(); 
        if (this.txtApellidos.getText().length() == 50) {
            evt.consume();
        }else{
            
        if( (car<'a' || car>'z') && (car<'A' || car>'Z')           
            && car !='á' //Minúsculas           
            && car !='é'          
            && car !='í'          
            && car !='ó'         
            && car !='ú' 
            && car !='Á' //Mayúsculas           
            && car !='É'          
            && car !='Í'          
            && car !='Ó'
            && car !='Ú'
            && car !='ñ'
            && car !='Ñ'   
            && (car!=(char)KeyEvent.VK_SPACE))
        {    
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese menos de 100 caracteres validos");
        }
        }
    }//GEN-LAST:event_txtApellidosKeyTyped

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        if (this.txtDireccion.getText().length() == 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDireccionKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        char car = evt.getKeyChar();
        if (this.txtTelefono.getText().length() == 20) {
            evt.consume();
        }else {
            if (car <='0' || car > '9') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNIKeyTyped
        char car = evt.getKeyChar();
        if (this.txtDNI.getText().length() == 8) {
            evt.consume();
        }else {
            if (car <='0' || car > '9') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtDNIKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        if (this.txtDireccion.getText().length() == 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void impresion(){
        //String imagen = "excel\\tablaimporte.xls";
        String archivo = JOptionPane.showInputDialog("Escriba el nombre del Archivo");
        String Ruta = System.getProperty("user.dir") + "\\excel\\" + archivo + ".xls";
        File file = new File(Ruta);
        ExportarExcel excel = new ExportarExcel(tblListado,file,"tablaimporte");
        excel.export();
    }
    
    private void mnuExportarPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportarPropietarioActionPerformed
        this.impresion();
    }//GEN-LAST:event_mnuExportarPropietarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPropietario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgGenero;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistar;
    private javax.swing.JComboBox<String> cboUsuario;
    private javax.swing.JCheckBox chkVigencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDNI;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JMenuItem mnuExportarPropietario;
    private javax.swing.JPanel panListado;
    private javax.swing.JPanel panPropietario;
    private javax.swing.JRadioButton rbFemenino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTable tblListado;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPropietario;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void limpiarControles() {
        
        this.txtNombres.setText("");
        this.txtApellidos.setText("");
        this.txtDireccion.setText("");
        this.txtTelefono.setText("");
        this.txtDNI.setText("");
        this.txtEmail.setText("");
        this.rbMasculino.setSelected(true);
    }

    private void activarControles(boolean estado) {
        this.panPropietario.setEnabled(estado);
        this.lblNombres.setEnabled(estado);
        this.lblApellidos.setEnabled(estado);
        this.lblDireccion.setEnabled(estado);
        this.lblTelefono.setEnabled(estado);
        this.lblDNI.setEnabled(estado);
        this.lblSexo.setEnabled(estado);
        this.lblEmail.setEnabled(estado);
        this.txtNombres.setEnabled(estado);
        this.txtApellidos.setEnabled(estado);
        this.txtDireccion.setEnabled(estado);
        this.txtTelefono.setEnabled(estado);
        this.txtDNI.setEnabled(estado);
        this.txtEmail.setEnabled(estado);
        this.rbMasculino.setEnabled(estado);
        this.rbFemenino.setEnabled(estado);
        this.btnRegistar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        this.chkVigencia.setEnabled(estado);
        
        this.panListado.setEnabled(!estado);
        this.btnListar.setEnabled(!estado);
        this.tblListado.setEnabled(!estado);
        this.btnNuevo.setEnabled(!estado);
        this.btnModificar.setEnabled(!estado);

        if (estado== true) {
            this.txtNombres.requestFocusInWindow();
        }else{
            this.btnListar.requestFocusInWindow();
        }
    }

    private void insertarColumnas() {
        
        //this.modelo.addColumn("Paciente");
        this.modelo.addColumn("Nombre Completo");
        this.modelo.addColumn("Direccion");
        this.modelo.addColumn("Telefono");
        this.modelo.addColumn("DNI");
        
    }
    
    public void presentarDatos(){
        DaoPropietario dao = new DaoPropietario();
        
        try {
            this.actual = dao.leer(this.actual);
            
            if (this.actual != null) {
                this.cboUsuario.setSelectedIndex(this.buscarUsuario
                        (this.actual.getUsuario()));
                this.txtNombres.setText(this.actual.getNombres());
                this.txtApellidos.setText(this.actual.getApellidos());
                this.txtDireccion.setText(this.actual.getDireccion());
                this.txtTelefono.setText(this.actual.getTelefono());
                this.txtDNI.setText(this.actual.getDNI());
                this.txtEmail.setText(this.actual.getE_mail());
        
                if (this.actual.getSexo()== 'M') {
                    this.rbMasculino.setSelected(true);
                } else {
                    this.rbFemenino.setSelected(true);
                }
                this.chkVigencia.setSelected(this.actual.isVigencia());
                this.activarControles(true);
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro el usuario");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }finally{
            dao = null;
        }
        
    }
    
    private int buscarUsuario(RegistroUsuario buscado){
        int i = 0;
        
        for (RegistroUsuario user : this.usuarios) {
            if (user.getCodigo() == buscado.getCodigo()) {
                return i;
            }
            i++;
        }
        return -1;
    }

    private void EliminarDelVector(int posEliminar) {
        /*for (int i = posEliminar; i < Veterinaria.cantidadActualPropietarios - 1; i++) {
        Veterinaria.propietarios[i] = Veterinaria.propietarios[i + 1];
            }
        Veterinaria.cantidadActualPropietarios--;*/
    }

}
