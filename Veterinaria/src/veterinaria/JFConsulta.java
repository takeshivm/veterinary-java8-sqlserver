/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package veterinaria;

import dao.DAOConsulta;
import dao.DAOHistorialClinico;
import dao.DAOMedico;
import entidades.Consulta;
import entidades.HistorialClinico;
import entidades.Medico;
import java.io.File;
import java.sql.Date;
import java.time.LocalDate;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class JFConsulta extends javax.swing.JFrame {

    private DefaultTableModel modelo = new DefaultTableModel();
    private List<Consulta> consultas;
    //private List<Paciente> pacientes;
    private List<HistorialClinico> historias;
    private List<Medico> medicos;
    private Consulta actual;
    
    public JFConsulta() {
        this.insertarColumnas();
        initComponents();
        this.activarControles(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panConsulta = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        dchFecha = new com.toedter.calendar.JDateChooser();
        lblRazonConsulta = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRazonConsulta = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSintomas = new javax.swing.JTextArea();
        lblSintomas = new javax.swing.JLabel();
        lblTipoConsulta = new javax.swing.JLabel();
        cboTipoConsulta = new javax.swing.JComboBox<>();
        lblDiagnostico = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDiagnostico = new javax.swing.JTextArea();
        lblTratamiento = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtTratamiento = new javax.swing.JTextArea();
        lblPaciente = new javax.swing.JLabel();
        cboPaciente = new javax.swing.JComboBox<>();
        lblPeso = new javax.swing.JLabel();
        spPeso = new javax.swing.JSpinner();
        lblTemperatura = new javax.swing.JLabel();
        spTemperatura = new javax.swing.JSpinner();
        lblFrecResp = new javax.swing.JLabel();
        spFrecResp = new javax.swing.JSpinner();
        spPulso = new javax.swing.JSpinner();
        lblPulso = new javax.swing.JLabel();
        lblCondCorp = new javax.swing.JLabel();
        txtCondCorp = new javax.swing.JTextField();
        chkEstado = new javax.swing.JCheckBox();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblMedico = new javax.swing.JLabel();
        cboMedico = new javax.swing.JComboBox<>();
        panListado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListado = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        lblNombrePaciente = new javax.swing.JLabel();
        txtNombrePaciente = new javax.swing.JTextField();
        btnCerrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuReporteConsulta = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONSULTAS");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        panConsulta.setBackground(new java.awt.Color(204, 204, 255));
        panConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 0))); // NOI18N
        panConsulta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFecha.setForeground(new java.awt.Color(0, 0, 0));
        lblFecha.setText("Fecha");
        panConsulta.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 114, -1, -1));

        dchFecha.setDateFormatString("dd-MM-yyyy");
        panConsulta.add(dchFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 110, 190, -1));

        lblRazonConsulta.setForeground(new java.awt.Color(0, 0, 0));
        lblRazonConsulta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRazonConsulta.setText("Razon de Consulta");
        panConsulta.add(lblRazonConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 177, 216, -1));

        txtRazonConsulta.setBackground(new java.awt.Color(255, 255, 255));
        txtRazonConsulta.setColumns(20);
        txtRazonConsulta.setForeground(new java.awt.Color(0, 0, 0));
        txtRazonConsulta.setRows(5);
        jScrollPane2.setViewportView(txtRazonConsulta);

        panConsulta.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 198, 216, 97));

        txtSintomas.setBackground(new java.awt.Color(255, 255, 255));
        txtSintomas.setColumns(20);
        txtSintomas.setForeground(new java.awt.Color(0, 0, 0));
        txtSintomas.setRows(5);
        jScrollPane3.setViewportView(txtSintomas);

        panConsulta.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 198, 206, 97));

        lblSintomas.setForeground(new java.awt.Color(0, 0, 0));
        lblSintomas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSintomas.setText("Sintomas");
        panConsulta.add(lblSintomas, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 177, 220, -1));

        lblTipoConsulta.setForeground(new java.awt.Color(0, 0, 0));
        lblTipoConsulta.setText("Tipo de Consulta");
        panConsulta.add(lblTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 146, -1, -1));

        cboTipoConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccion algun Tipo", "Normal", "Urgente", "Emergencia" }));
        panConsulta.add(cboTipoConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 141, 125, -1));

        lblDiagnostico.setForeground(new java.awt.Color(0, 0, 0));
        lblDiagnostico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDiagnostico.setText("Diagnostico");
        panConsulta.add(lblDiagnostico, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 301, 216, -1));

        txtDiagnostico.setBackground(new java.awt.Color(255, 255, 255));
        txtDiagnostico.setColumns(20);
        txtDiagnostico.setForeground(new java.awt.Color(0, 0, 0));
        txtDiagnostico.setRows(5);
        jScrollPane4.setViewportView(txtDiagnostico);

        panConsulta.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 322, 216, 86));

        lblTratamiento.setForeground(new java.awt.Color(0, 0, 0));
        lblTratamiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTratamiento.setText("Tratamiento");
        panConsulta.add(lblTratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 301, 216, -1));

        txtTratamiento.setBackground(new java.awt.Color(255, 255, 255));
        txtTratamiento.setColumns(20);
        txtTratamiento.setForeground(new java.awt.Color(0, 0, 0));
        txtTratamiento.setRows(5);
        jScrollPane5.setViewportView(txtTratamiento);

        panConsulta.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 322, 205, 86));

        lblPaciente.setForeground(new java.awt.Color(0, 0, 0));
        lblPaciente.setText("Historial del Paciente");
        panConsulta.add(lblPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 76, -1, -1));

        cboPaciente.setModel(cargarHisorias());
        panConsulta.add(cboPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 150, -1));

        lblPeso.setForeground(new java.awt.Color(0, 0, 0));
        lblPeso.setText("Peso");
        panConsulta.add(lblPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 422, -1, -1));

        spPeso.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 0.5d));
        panConsulta.add(spPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 420, 94, -1));

        lblTemperatura.setForeground(new java.awt.Color(0, 0, 0));
        lblTemperatura.setText("Temperatura");
        panConsulta.add(lblTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 422, -1, -1));

        spTemperatura.setModel(new javax.swing.SpinnerNumberModel(39.5d, 0.0d, null, 0.5d));
        panConsulta.add(spTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 420, 108, -1));

        lblFrecResp.setForeground(new java.awt.Color(0, 0, 0));
        lblFrecResp.setText("Frecuencia respiratoria");
        panConsulta.add(lblFrecResp, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 454, -1, -1));

        spFrecResp.setModel(new javax.swing.SpinnerNumberModel(20, 0, null, 10));
        panConsulta.add(spFrecResp, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 452, 94, -1));

        spPulso.setModel(new javax.swing.SpinnerNumberModel(100, 0, null, 10));
        panConsulta.add(spPulso, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 452, 108, -1));

        lblPulso.setForeground(new java.awt.Color(0, 0, 0));
        lblPulso.setText("Pulso");
        panConsulta.add(lblPulso, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 454, -1, -1));

        lblCondCorp.setForeground(new java.awt.Color(0, 0, 0));
        lblCondCorp.setText("Condicion corporal");
        panConsulta.add(lblCondCorp, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 492, -1, -1));

        txtCondCorp.setBackground(new java.awt.Color(255, 255, 255));
        txtCondCorp.setForeground(new java.awt.Color(0, 0, 0));
        panConsulta.add(txtCondCorp, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 490, 128, -1));

        chkEstado.setText("Estado");
        panConsulta.add(chkEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 521, -1, -1));

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        panConsulta.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 533, -1, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panConsulta.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 533, -1, -1));

        lblMedico.setForeground(new java.awt.Color(0, 0, 0));
        lblMedico.setText("Medico");
        panConsulta.add(lblMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 34, -1, -1));

        cboMedico.setModel(cargarMedicos());
        panConsulta.add(cboMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 29, 182, -1));

        panListado.setBackground(new java.awt.Color(102, 204, 255));
        panListado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 0))); // NOI18N
        panListado.setForeground(new java.awt.Color(0, 0, 0));

        tblListado.setModel(this.modelo);
        jScrollPane1.setViewportView(tblListado);

        btnBuscar.setBackground(new java.awt.Color(153, 204, 255));
        btnBuscar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscar.setText("Listar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        lblNombrePaciente.setForeground(new java.awt.Color(0, 0, 0));
        lblNombrePaciente.setText("Nombre del Paciente");

        javax.swing.GroupLayout panListadoLayout = new javax.swing.GroupLayout(panListado);
        panListado.setLayout(panListadoLayout);
        panListadoLayout.setHorizontalGroup(
            panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
            .addGroup(panListadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panListadoLayout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panListadoLayout.createSequentialGroup()
                        .addComponent(lblNombrePaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombrePaciente)
                        .addGap(29, 29, 29)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panListadoLayout.setVerticalGroup(
            panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panListadoLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombrePaciente)
                        .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnModificar))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        mnuReporteConsulta.setText(" Exportar reporte");
        mnuReporteConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReporteConsultaActionPerformed(evt);
            }
        });
        jMenu1.add(mnuReporteConsulta);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panListado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panListado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.actual = null;
        this.activarControles(true);
        this.limpiarControles();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        DAOConsulta dao;
        Consulta cons;
        
        if (this.validarDatos() == true) {
            cons = new Consulta();
          
                cons.setFecha(this.dchFecha.getDate());
                cons.setSintoma(this.txtSintomas.getText());
                cons.setDiagnostico(this.txtDiagnostico.getText());
                if (this.cboTipoConsulta.getSelectedIndex() == 1) {
                    cons.setTipoConsulta("Normal");
                }else if (this.cboTipoConsulta.getSelectedIndex() == 2) {
                    cons.setTipoConsulta("Urgencia");
                }else if (this.cboTipoConsulta.getSelectedIndex() == 3) {
                    cons.setTipoConsulta("Emergencia");
                }
                cons.setRazonConsulta(this.txtRazonConsulta.getText());
                cons.setTratamiento(this.txtTratamiento.getText());
                cons.setPeso((Double)this.spPeso.getValue());
                cons.setTemperatura((Double)this.spTemperatura.getValue());
                cons.setFrecuenciaResp((Integer)this.spFrecResp.getValue());
                cons.setPulso((Integer)this.spPulso.getValue());
                cons.setCondicion(this.txtCondCorp.getText());
                cons.setEstado(this.chkEstado.isSelected());
                cons.setHistotia(this.historias.get
                    (this.cboPaciente.getSelectedIndex()));
                cons.setMedico(this.medicos.get
                    (this.cboMedico.getSelectedIndex()));
                 dao = new DAOConsulta();
                    try {
                        if (this.actual == null) {
                            dao.registrar(cons);
                        }else{
                            cons.setCodigo(this.actual.getCodigo());
                            dao.actualizar(cons);
                        }
                        this.activarControles(false);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }finally{
                        cons = null;
                        dao = null;
                    }
                }
            
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      DAOConsulta dao = new DAOConsulta();

      try {
        this.consultas = dao.listar(this.txtNombrePaciente.getText());
        this.llenarTabla();
      } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "NO se encontro"+e.getMessage());
      } finally {
            dao = null;
      }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int pos = this.tblListado.getSelectedRow();
        if (pos > -1) {
            this.actual = this.consultas.get(pos);
            this.presentarDatos();
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un paciente");
            this.tblListado.requestFocusInWindow();
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.activarControles(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void impresion(){
        //String imagen = "excel\\tablaimporte.xls";
        String archivo = JOptionPane.showInputDialog("Escriba el nombre del Archivo");
        String Ruta = System.getProperty("user.dir") + "\\excel\\" + archivo + ".xls";
        File file = new File(Ruta);
        ExportarExcel excel = new ExportarExcel(tblListado,file,"tablaimporte");
        excel.export();
    }
    
    private void mnuReporteConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReporteConsultaActionPerformed
        this.impresion();
    }//GEN-LAST:event_mnuReporteConsultaActionPerformed

    private void presentarDatos(){
        DAOConsulta dao = new DAOConsulta();
        try {
            this.actual = dao.leer(this.actual);
            if (this.actual != null) {
                this.cboPaciente.setSelectedIndex(
                        this.buscarHistoria(this.actual.getHistotia()));
                this.cboMedico.setSelectedIndex(
                        this.buscarMedico(this.actual.getMedico()));
                this.dchFecha.setDate(this.actual.getFecha());
                if (this.actual.getTipoConsulta().equalsIgnoreCase("Normal")) {
                    this.cboTipoConsulta.setSelectedIndex(1);
                }else if(this.actual.getTipoConsulta().equalsIgnoreCase("Urgente")){
                    this.cboTipoConsulta.setSelectedIndex(2);
                }else if (this.actual.getTipoConsulta().equalsIgnoreCase("Emergencia")) {
                    this.cboTipoConsulta.setSelectedIndex(3);
                }
                
                this.txtSintomas.setText(this.actual.getSintoma());
                this.txtRazonConsulta.setText(this.actual.getRazonConsulta());
                this.txtDiagnostico.setText(this.actual.getDiagnostico());
                this.txtTratamiento.setText(this.actual.getTratamiento());
                this.txtCondCorp.setText(this.actual.getCondicion());
                this.spPeso.setValue(this.actual.getPeso());
                this.spTemperatura.setValue(this.actual.getTemperatura());
                this.spFrecResp.setValue(this.actual.getFrecuenciaResp());
                this.spPulso.setValue(this.actual.getPulso());
                this.chkEstado.setSelected(this.actual.isEstado());
                this.activarControles(true);
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro la consulta");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }finally{
            dao = null;
        }
    }
    
    private int buscarHistoria(HistorialClinico buscado){
        int i = 0;
        
        for (HistorialClinico historia : this.historias) {
            if (historia.getCodigo() == buscado.getCodigo()) {
                return i;
            }
        }
        return -1;
    
    }
    
    private int buscarMedico(Medico buscado){
        int i = 0;
        
        for (Medico medico : this.medicos) {
            if (medico.getCodigo() == buscado.getCodigo()) {
                return i;
            }
        }
        return -1;
    }
    
    private void llenarTabla(){
        this.modelo.setRowCount(0);
        
        for (Consulta consulta : consultas) {
            this.modelo.addRow(new Object[]{
                
                consulta.getNombrePaciente(),
                consulta.getMedico().getNombre(),
                consulta.getFechaConsulta(),
                consulta.getTipoConsulta()
            });
        }
    }
    
    private boolean validarDatos(){
        boolean  validar = true;
        if (this.txtSintomas.getText().length() == 0) {
            validar = false;
        }
        return validar;
    }
    
    private ComboBoxModel cargarMedicos(){
        DAOMedico dao = new DAOMedico();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        
        try {
            this.medicos = dao.listar("");
            this.llenarComboMedicos(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return modelo;
    }
    
    private void llenarComboMedicos(DefaultComboBoxModel modelo){
        for (Medico medico : this.medicos) {
            modelo.addElement(medico.getNombre());
        }
    }
    
    private ComboBoxModel cargarHisorias(){
        DAOHistorialClinico dao = new DAOHistorialClinico();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        
        try {
            this.historias = dao.listar("");
            this.llenarComboHistorias(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return modelo;
    }
    
    private void llenarComboHistorias(DefaultComboBoxModel modelo){
        for (HistorialClinico historia : this.historias) {
            modelo.addElement(historia.getPaciente().getNombre());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboMedico;
    private javax.swing.JComboBox<String> cboPaciente;
    private javax.swing.JComboBox<String> cboTipoConsulta;
    private javax.swing.JCheckBox chkEstado;
    private com.toedter.calendar.JDateChooser dchFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCondCorp;
    private javax.swing.JLabel lblDiagnostico;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFrecResp;
    private javax.swing.JLabel lblMedico;
    private javax.swing.JLabel lblNombrePaciente;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblPulso;
    private javax.swing.JLabel lblRazonConsulta;
    private javax.swing.JLabel lblSintomas;
    private javax.swing.JLabel lblTemperatura;
    private javax.swing.JLabel lblTipoConsulta;
    private javax.swing.JLabel lblTratamiento;
    private javax.swing.JMenuItem mnuReporteConsulta;
    private javax.swing.JPanel panConsulta;
    private javax.swing.JPanel panListado;
    private javax.swing.JSpinner spFrecResp;
    private javax.swing.JSpinner spPeso;
    private javax.swing.JSpinner spPulso;
    private javax.swing.JSpinner spTemperatura;
    private javax.swing.JTable tblListado;
    private javax.swing.JTextField txtCondCorp;
    private javax.swing.JTextArea txtDiagnostico;
    private javax.swing.JTextField txtNombrePaciente;
    private javax.swing.JTextArea txtRazonConsulta;
    private javax.swing.JTextArea txtSintomas;
    private javax.swing.JTextArea txtTratamiento;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos(){
        
    }
    
    private void insertarColumnas() {
        this.modelo.addColumn("Paciente");
        this.modelo.addColumn("Medico");
        this.modelo.addColumn("Fecha");
        this.modelo.addColumn("Tipo de consulta");
    }

    private void activarControles(boolean estado) {
        this.panConsulta.setEnabled(estado);
        this.lblPaciente.setEnabled(estado);
        this.cboPaciente.setEnabled(estado);
        this.lblMedico.setEnabled(estado);
        this.cboMedico.setEnabled(estado);
        this.lblTipoConsulta.setEnabled(estado);
        this.cboTipoConsulta.setEnabled(estado);
        this.lblFecha.setEnabled(estado);
        this.dchFecha.setEnabled(estado);
        this.lblRazonConsulta.setEnabled(estado);
        this.txtRazonConsulta.setEnabled(estado);
        this.lblSintomas.setEnabled(estado);
        this.txtSintomas.setEnabled(estado);
        this.lblDiagnostico.setEnabled(estado);
        this.txtDiagnostico.setEnabled(estado);
        this.lblTratamiento.setEnabled(estado);
        this.txtTratamiento.setEnabled(estado);
        this.lblPeso.setEnabled(estado);
        this.spPeso.setEnabled(estado);
        this.lblTemperatura.setEnabled(estado);
        this.spTemperatura.setEnabled(estado);
        this.lblFrecResp.setEnabled(estado);
        this.spFrecResp.setEnabled(estado);
        this.lblPulso.setEnabled(estado);
        this.spPulso.setEnabled(estado);
        this.lblCondCorp.setEnabled(estado);
        this.txtCondCorp.setEnabled(estado);
        this.chkEstado.setEnabled(estado);
        this.btnAceptar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        
        
        this.panListado.setEnabled(!estado);
        this.lblNombrePaciente.setEnabled(!estado);
        this.txtNombrePaciente.setEnabled(!estado);
        this.btnBuscar.setEnabled(!estado);
        this.tblListado.setEnabled(!estado);
        this.btnNuevo.setEnabled(!estado);
        this.btnModificar.setEnabled(!estado);
        this.btnCerrar.setEnabled(!estado);
        
        if (estado == true) {
            this.cboPaciente.requestFocusInWindow();
        }else{
            this.btnBuscar.requestFocusInWindow();
        }
    }

    private void limpiarControles() {
        SpinnerNumberModel modelo = new SpinnerNumberModel();
        this.cboPaciente.setSelectedIndex(-1);
        this.cboMedico.setSelectedIndex(-1);
        this.dchFecha.setDate(Date.valueOf(LocalDate.now()));
        this.cboTipoConsulta.setSelectedIndex(0);
        this.txtSintomas.setText("");
        this.txtRazonConsulta.setText("");
        this.txtDiagnostico.setText("");
        this.txtTratamiento.setText("");
        this.txtCondCorp.setText("");
        this.txtNombrePaciente.setText("");
        modelo = (SpinnerNumberModel)this.spPeso.getModel();
        this.spPeso.setValue(modelo.getValue());
        modelo = (SpinnerNumberModel)this.spTemperatura.getModel();
        this.spTemperatura.setValue(modelo.getValue());
        modelo = (SpinnerNumberModel)this.spFrecResp.getModel();
        this.spFrecResp.setValue(modelo.getValue());
        modelo = (SpinnerNumberModel)this.spPulso.getModel();
        this.spPulso.setValue(modelo.getValue());
        this.chkEstado.setSelected(true);
    }

    private void eliminarDelVector(int pos) {
        
    }
}
